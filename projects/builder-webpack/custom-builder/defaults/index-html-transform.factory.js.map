{"version":3,"file":"index-html-transform.factory.js","sourceRoot":"","sources":["../../../../../libs/builder-webpack/custom-builder/defaults/index-html-transform.factory.ts"],"names":[],"mappings":";;;AAAA,oCAA0C;AAC1C,+CAA4E;AAI5E,SAAgB,yBAAyB,CACvC,OAAmB,EACnB,OAAuB;IAEvB,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;IAC7C,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;IAC1C,iEAAiE;IACjE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,SAAiB,EAAmB,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC3E;IACD,sBAAc,CACZ,cAAwB,EACxB,GAAG,oBAAa,CAAC,gBAAS,CAAC,aAAa,CAAC,CAAC,IAAI,QAAQ,EAAE,CACzD,CAAC;IACF,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,oBAAa,CAC1C,gBAAS,CAAC,aAAa,CAAC,CACzB,IAAI,cAAc,EAAE,CAAC,CAAC;IACvB,MAAM,SAAS,GAAG,WAAW,CAAC,OAAO,IAAI,WAAW,CAAC;IAErD,OAAO,CAAC,SAAiB,EAAE,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,CAAC;AApBD,8DAoBC","sourcesContent":["import { tsNodeRegister } from '../utils';\r\nimport { getSystemPath, JsonObject, normalize } from '@angular-devkit/core';\r\nimport { BuilderContext } from '@angular-devkit/architect';\r\nimport { IndexHtmlTransform } from '@angular-devkit/build-angular/src/utils/index-file/index-html-generator';\r\n\r\nexport function indexHtmlTransformFactory(\r\n  options: JsonObject,\r\n  context: BuilderContext\r\n): IndexHtmlTransform {\r\n  const { indexTransform, tsConfig } = options;\r\n  const { workspaceRoot, target } = context;\r\n  // if custom indexTransform is set in angular.json use them first\r\n  if (!indexTransform) {\r\n    return (indexHtml: string): Promise<string> => Promise.resolve(indexHtml);\r\n  }\r\n  tsNodeRegister(\r\n    indexTransform as string,\r\n    `${getSystemPath(normalize(workspaceRoot))}/${tsConfig}`\r\n  );\r\n  const indexModule = require(`${getSystemPath(\r\n    normalize(workspaceRoot)\r\n  )}/${indexTransform}`);\r\n  const transform = indexModule.default || indexModule;\r\n\r\n  return (indexHtml: string) => transform(target, indexHtml);\r\n}\r\n"]}