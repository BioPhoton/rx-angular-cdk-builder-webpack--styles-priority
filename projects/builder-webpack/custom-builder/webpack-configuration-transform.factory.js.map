{"version":3,"file":"webpack-configuration-transform.factory.js","sourceRoot":"","sources":["../../../../libs/builder-webpack/custom-builder/webpack-configuration-transform.factory.ts"],"names":[],"mappings":";;;AAIA,kDAAoH;AAEpH,SAAgB,oCAAoC,CAClD,OAAoC,EACpC,OAAuB;IAEvB,MAAM,kCAAkC,GAAG,mDAAyC,CAClF,OAAO,EACP,OAAO,CACR,CAAC;IACF,OAAO,CACL,aAA4B,EACY,EAAE;QAC1C,OAAO,kCAAkC,CAAC,aAAa,CAAC,CAAC;IAC3D,CAAC,CAAC;AACJ,CAAC;AAbD,oFAaC","sourcesContent":["import { BuilderContext } from '@angular-devkit/architect';\r\nimport { Configuration } from 'webpack';\r\nimport { CustomWebpackBuilderOptions } from './model';\r\nimport { ExecutionTransformer } from '@angular-devkit/build-angular';\r\nimport { webpackConfigurationTransformFactory as slotsWebpackConfigurationTransformFactory } from '../styles-slots';\r\n\r\nexport function webpackConfigurationTransformFactory(\r\n  options: CustomWebpackBuilderOptions,\r\n  context: BuilderContext\r\n): ExecutionTransformer<Configuration> {\r\n  const slotsWebpackConfigurationTransform = slotsWebpackConfigurationTransformFactory(\r\n    options,\r\n    context\r\n  );\r\n  return (\r\n    webpackConfig: Configuration\r\n  ): Promise<Configuration> | Configuration => {\r\n    return slotsWebpackConfigurationTransform(webpackConfig);\r\n  };\r\n}\r\n"]}