{"version":3,"file":"index-html-transform.js","sourceRoot":"","sources":["../../../../libs/builder-webpack/styles-slots/index-html-transform.ts"],"names":[],"mappings":"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","sourcesContent":["import * as jsdom from 'jsdom';\r\nimport {\r\n  cssLoadingPriorities,\r\n  IndexHtmlTransformOption,\r\n  StyleSlots,\r\n} from './model';\r\nimport { resolveFileContent } from '../custom-builder/utils';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst { JSDOM } = jsdom;\r\n\r\nconst criticalSlotElement = (document: Document): Element => {\r\n  const elems = document.querySelectorAll('head');\r\n  const defaultElem = elems[elems.length - 1];\r\n  if (!defaultElem) {\r\n    throw new Error(`Default slot element for slot \"critical\" not present`);\r\n  }\r\n  return defaultElem;\r\n};\r\n\r\nconst stylesheetSlotElement = (document: Document): Element => {\r\n  const elems = document.querySelectorAll('head');\r\n  const defaultElem = elems[elems.length - 1];\r\n  if (!defaultElem) {\r\n    throw new Error(`Default slot element for slot \"stylesheet\" not present`);\r\n  }\r\n\r\n  return defaultElem;\r\n};\r\n\r\nconst preloadSlotElement = (document: Document): Element => {\r\n  const elems = document.querySelectorAll('head');\r\n  const defaultElem = elems[elems.length - 1];\r\n  if (!defaultElem) {\r\n    throw new Error(`Default slot element for slot \"preload\" not present`);\r\n  }\r\n\r\n  return defaultElem;\r\n};\r\n\r\nconst prefetchSlotElement = (document: Document): Element => {\r\n  const elems = document.querySelectorAll('head');\r\n  const defaultElem = elems[elems.length - 1];\r\n  if (!defaultElem) {\r\n    throw new Error(`Default slot element for slot \"prefetch\" not present`);\r\n  }\r\n\r\n  return defaultElem;\r\n};\r\n\r\n/**\r\n * This functions places named slots in the passed HTML document to enable easy and intuitive lazy loading of styles.\r\n *\r\n * The slots are grouped by possible loading priorities in the browser. To give the developer the chance to compose the\r\n * applications styles fine-grained, multiple slots are provided under one priority.\r\n *\r\n ** **Render-blocking** (one file in prod mode):\r\n * - defaults\r\n * - above-the-fold\r\n *\r\n * **Preloaded** (one file in prod mode):\r\n * - third-party\r\n * - main\r\n *\r\n * **Prefethed** (one files in prod mode):\r\n * - low-priority\r\n *\r\n * # Default Slot\r\n *\r\n * - render-blocking => <style></style>\r\n * - framework/third-party independent basics which everything else build up on\r\n * - browser default\r\n * - base styling\r\n *\r\n * # AboveTheFold Slot\r\n * - render-blocking => <style></style>\r\n * - Render blocking styles here to provide initial meaningful pain (duplicates/redundance of later loaded styles)\r\n *\r\n * # ThirdParty Slot\r\n * - When should you\r\n * - render-non-blocking => <link rel=\"preload\" href=\"style.css\" as=\"style\">\r\n * - sibling styles are independent\r\n * - this styles will get overridden/customized later\r\n *\r\n * # Main Slot\r\n * Use `rel=\"preload\"` as this resources have high-confidence to be used in the current page.\r\n *\r\n * - render-blocking => <style></style>\r\n * - sibling styles are independent (do not bleed into each other)\r\n * - order also independent e.g. main.css before calendar-custom.css\r\n *\r\n * # LowPriority Slot\r\n * Use `rel=\"prefetch\"` as it is likely to be used for future navigations across multiple navigation boundaries.\r\n *\r\n * - non-render-blocking `<link rel=\"prefetch\" href=\"style.css\" as=\"style\">`\r\n * - encapsulated styles (web component like)\r\n * - independent customizations/overrides\r\n * - lazy routes\r\n * - lazy components\r\n *\r\n * @Example\r\n *\r\n * <!doctype html>\r\n * <html lang=\"en\">\r\n *  <head>\r\n *    <!-- Â®âœ–ðŸ…° CRITICAL - render-blocking inline styles -->\r\n *    <styles id=\"styles-prio--critical\"></styles>\r\n *\r\n *    <meta charset=\"utf-8\">\r\n *    <base href=\"/\">\r\n *    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n *    <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n *\r\n *    <!-- Â®âœ–ðŸ…° STYLESHEET - render-blocking styles -->\r\n *    <link rel=\"stylesheet\" id=\"styles-prio--stylesheet\" href=\"\"></link>\r\n *\r\n *    <!-- ðŸ…° STYLES START -->\r\n *    <!-- ðŸ‘‡ MAIN ðŸ‘‡ -->\r\n *    <link rel=\"stylesheet\" id=\"main\" href=\"\" />\r\n *\r\n *    <!-- ðŸ…° ANGULAR styles as css (in prod mode) -->\r\n *    <link rel=\"stylesheet\" href=\"\">\r\n *    <!-- ðŸ…° STYLES END -->\r\n *    <!-- Â®âœ–ðŸ…° PRELOAD (one file in prod mode) -->\r\n *    <!-- ðŸ‘‡ MAIN ðŸ‘‡ -->\r\n *    <link rel=\"preload\" id=\"main\" href=\"\" as=\"styles\"></link>\r\n *\r\n *    <!-- Â®âœ–ðŸ…° PREFETCH (one file in prod mode) -->\r\n *    <!-- ðŸ‘‡ LOW PRIORITY ðŸ‘‡ -->\r\n *    <link rel=\"prefetch\" id=\"low-priority\" href=\"\" as=\"styles\"></link>\r\n *  </head>\r\n *  <body>\r\n *    <app-root></app-root>\r\n *\r\n *\r\n *    <!-- ðŸ…° SCRIPTS START -->\r\n *    <!-- ðŸ…° ANGULAR styles as JS (in dev mode) -->\r\n *    <script src=\"styles.js\" defer></script>\r\n *    <!-- ðŸ…° SCRIPTS END -->\r\n *  </body>\r\n * </html>\r\n *\r\n * @param options\r\n * @param indexHtmlContent\r\n *\r\n * @returns new indexHtml string\r\n */\r\nexport function indexHtmlTransform(\r\n  options$: Observable<IndexHtmlTransformOption>,\r\n  indexHtmlContent: string\r\n): Promise<string> {\r\n  return options$\r\n    .pipe(\r\n      map((options) => {\r\n        const { stylesSlots } = options;\r\n        const { critical, stylesheet, preload, prefetch } = stylesSlots;\r\n        const dom = new JSDOM(indexHtmlContent);\r\n        const { document } = dom.window;\r\n\r\n        const { extractCss } = options;\r\n\r\n        // remove angular placed main styles\r\n        document.querySelector(`link[href^=\"styles.\"]`).remove()\r\n\r\n        if (critical) {\r\n          getLastSlotElement('critical', criticalSlotElement, document).prepend(\r\n            htmlToElement(getStylesTags(critical, 'critical'))\r\n          );\r\n        }\r\n\r\n        if (stylesheet) {\r\n          getLastSlotElement(\r\n            'stylesheet',\r\n            stylesheetSlotElement,\r\n            document\r\n          ).appendChild(htmlToElement(getStylesTags(stylesheet, 'stylesheet')));\r\n        }\r\n\r\n        if (preload) {\r\n          getLastSlotElement(\r\n            'preload',\r\n            preloadSlotElement,\r\n            document\r\n          ).appendChild(htmlToElement(getStylesTags(preload, 'preload')));\r\n        }\r\n\r\n        if (prefetch) {\r\n          getLastSlotElement(\r\n            'prefetch',\r\n            prefetchSlotElement,\r\n            document\r\n          ).appendChild(htmlToElement(getStylesTags(prefetch, 'prefetch')));\r\n        }\r\n\r\n        return dom.serialize();\r\n\r\n        // ===============\r\n\r\n        function htmlToElement(html: string): Element {\r\n          const template = document.createElement('template');\r\n          html = html.trim(); // Never return a text node of whitespace as the result\r\n          template.innerHTML = html;\r\n          return template.content.firstChild as Element;\r\n        }\r\n      })\r\n    )\r\n    .toPromise();\r\n}\r\n\r\nfunction getLastSlotElement(\r\n  slotName: string,\r\n  defaultElement: (indexHtml: Document) => Element,\r\n  document: HTMLDocument\r\n): Element {\r\n  const elems: NodeListOf<HTMLElement> = document.querySelectorAll(\r\n    `[data-stylesSlots=\"${slotName}\"]`\r\n  );\r\n  // default styles slot already placed\r\n  if (elems.length > 0) {\r\n    return elems[elems.length - 1];\r\n  }\r\n  // use default styles slot\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  return defaultElement(document);\r\n}\r\n\r\nfunction getStylesTags(\r\n  url: string | string[],\r\n  slotName: keyof StyleSlots = 'prefetch'\r\n) {\r\n  const urls = Array.isArray(url) ? url : [url];\r\n  let format: (url: string) => string;\r\n  switch (slotName) {\r\n    case 'critical':\r\n      format = (url) => style(slotName, url);\r\n      break;\r\n    case 'stylesheet':\r\n    case 'preload':\r\n    case 'prefetch':\r\n      format = (url) => link(slotName, url);\r\n      break;\r\n  }\r\n\r\n  return urls.map((url) => format(url)).join('');\r\n\r\n  function link(\r\n    slotName: Omit<cssLoadingPriorities, 'critical'>,\r\n    url: string\r\n  ): string {\r\n    const asAttribute = url.split('.').pop() === 'css' ? 'as=\"style\"' : 'as=\"script\"';\r\n    return `<link rel=\"${slotName}\" data-stylseSlot=\"${slotName}\" href=\"${url}\" ${\r\n      slotName !== 'stylesheet' ? asAttribute : ''\r\n    }/>`;\r\n  }\r\n\r\n  function style(slotName: 'critical', url: string): string {\r\n    const inlineStylesContent = '.todo-inline-styles-here {}'; //resolveFileContent(url);\r\n    return `<style data-stylseSlot=\"${slotName}\">${inlineStylesContent}</style>`;\r\n  }\r\n}\r\n"]}