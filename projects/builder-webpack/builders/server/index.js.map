{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../libs/builder-webpack/builders/server/index.ts"],"names":[],"mappings":";;;AAAA,yDAAyE;AACzE,iEAGuC;AAGvC,8CAA2C;AAC3C,sDAA0D;AAI1D,SAAgB,wBAAwB,CACtC,OAAkC,EAClC,OAAY;IAEZ,OAAO,oBAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,CACxC,qBAAS,CAAC,CAAC,oBAAoB,EAAE,EAAE,CACjC,oCAAoB,CAAC,oBAAoB,EAAE,OAAO,CAAC,CACpD,CACF,CAAC;AACJ,CAAC;AATD,4DASC;AAED,kBAAe,yBAAa,CAC1B,wBAAwB,CACzB,CAAC","sourcesContent":["import { BuilderOutput, createBuilder } from '@angular-devkit/architect';\r\nimport {\r\n  executeServerBuilder,\r\n  ServerBuilderOptions,\r\n} from '@angular-devkit/build-angular';\r\nimport { json } from '@angular-devkit/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { mergeOptions } from '../../custom-builder/utils';\r\n\r\nexport type CustomWebpackServerSchema = ServerBuilderOptions;\r\n\r\nexport function buildCustomWebpackServer(\r\n  options: CustomWebpackServerSchema,\r\n  context: any\r\n): Observable<BuilderOutput> {\r\n  return mergeOptions(options, context).pipe(\r\n    switchMap((customWebpackOptions) =>\r\n      executeServerBuilder(customWebpackOptions, context)\r\n    )\r\n  );\r\n}\r\n\r\nexport default createBuilder<json.JsonObject & CustomWebpackServerSchema>(\r\n  buildCustomWebpackServer\r\n);\r\n"]}